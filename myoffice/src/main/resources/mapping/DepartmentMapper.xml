<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.neuedu.myoffice.dao.DepartmentMapper">
	<cache></cache>
  	<resultMap id="BaseResultMap" type="com.neuedu.myoffice.entity.Department">
	    <constructor>
	      <idArg column="id" javaType="java.lang.String" jdbcType="VARCHAR" />
	      <arg column="name" javaType="java.lang.String" jdbcType="VARCHAR" />
	      <arg column="type" javaType="java.lang.String" jdbcType="VARCHAR" />
	      <arg column="telephone" javaType="java.lang.String" jdbcType="VARCHAR" />
	      <arg column="fax" javaType="java.lang.String" jdbcType="VARCHAR" />
	      <arg column="description" javaType="java.lang.String" jdbcType="VARCHAR" />
	      <arg column="predepartment" javaType="java.lang.String" jdbcType="VARCHAR" />
	      <arg column="date" javaType="java.util.Date" jdbcType="DATE" />
	    </constructor>
  	</resultMap>
  <sql id="Base_Column_List">
    id, name, type, telephone, fax, description, predepartment, date
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap" useCache="true">
    select 
    <include refid="Base_Column_List" />
    from department
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <select id="selectAll"  resultMap="BaseResultMap" useCache="true">
    select 
    <include refid="Base_Column_List" />
    from department
    order by id asc
  </select>
  <select id="findByCondition"  resultMap="BaseResultMap" useCache="true">
    select 
    <include refid="Base_Column_List" />
    from department
    <where>
    <if test = "id != null">
    	and id like concat('%',#{id},'%')
    </if>
    <if test = "name != null">
    	and name like concat('%',#{name},'%')
    </if>
    <if test = "type != null">
    	and type like concat('%',#{type},'%')
    </if>
    </where>
    order by id asc
  </select>
  <!--  
  <select id="findByCondition"  resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from department
        where 1=1
    <if test = 'id != null'>
    	and id like concat('%',#{id},'%')
    </if>
        <if test = 'name != null'>
    	and name like concat('%',#{name},'%')
    </if>
        <if test = 'type != null'>
    	and type like concat('%',#{type},'%')
    </if>
    order by id asc
  </select>
  -->
    <delete id="batchDelete" parameterType="java.lang.String" flushCache="true">
    delete from department
    where id in
    <foreach item="item" collection="array" open="(" separator="," close=")">
    #{item}
    </foreach>
  </delete>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" flushCache="true">
    delete from department
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.neuedu.myoffice.entity.Department" flushCache="true">
    insert into department (id, name, type, 
      telephone, fax, description, 
      predepartment, date)
    values (#{id,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, #{type,jdbcType=VARCHAR}, 
      #{telephone,jdbcType=VARCHAR}, #{fax,jdbcType=VARCHAR}, #{description,jdbcType=VARCHAR}, 
      #{predepartment,jdbcType=VARCHAR}, #{date,jdbcType=DATE})
  </insert>
  <insert id="insertSelective" parameterType="com.neuedu.myoffice.entity.Department"
   useGeneratedKeys="true" keyColumn="id" keyProperty="id"  flushCache="true">
    insert into department
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="telephone != null">
        telephone,
      </if>
      <if test="fax != null">
        fax,
      </if>
      <if test="description != null">
        description,
      </if>
      <if test="predepartment != null">
        predepartment,
      </if>
      <if test="date != null">
        date,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="telephone != null">
        #{telephone,jdbcType=VARCHAR},
      </if>
      <if test="fax != null">
        #{fax,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="predepartment != null">
        #{predepartment,jdbcType=VARCHAR},
      </if>
      <if test="date != null">
        #{date,jdbcType=DATE},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.neuedu.myoffice.entity.Department" flushCache="true">
    update department
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=VARCHAR},
      </if>
      <if test="telephone != null">
        telephone = #{telephone,jdbcType=VARCHAR},
      </if>
      <if test="fax != null">
        fax = #{fax,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="predepartment != null">
        predepartment = #{predepartment,jdbcType=VARCHAR},
      </if>
      <if test="date != null">
        date = #{date,jdbcType=DATE},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.neuedu.myoffice.entity.Department" flushCache="true">
    update department
    set name = #{name,jdbcType=VARCHAR},
      type = #{type,jdbcType=VARCHAR},
      telephone = #{telephone,jdbcType=VARCHAR},
      fax = #{fax,jdbcType=VARCHAR},
      description = #{description,jdbcType=VARCHAR},
      predepartment = #{predepartment,jdbcType=VARCHAR},
      date = #{date,jdbcType=DATE}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>